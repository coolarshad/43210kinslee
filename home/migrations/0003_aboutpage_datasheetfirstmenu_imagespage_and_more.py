# Generated by Django 4.2.7 on 2023-11-17 19:08

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.blocks
import wagtail.documents.blocks
import wagtail.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0089_log_entry_data_json_null_to_object'),
        ('wagtailimages', '0025_alter_image_file_alter_rendition_file'),
        ('home', '0002_create_homepage'),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('body', wagtail.fields.RichTextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='DataSheetFirstMenu',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('file_upload', wagtail.fields.StreamField([('file', wagtail.documents.blocks.DocumentChooserBlock(help_text='Upload a file', required=False))], blank=True, null=True, use_json_field=True)),
                ('is_file', models.BooleanField(default=False, help_text='Check to enable the feature')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ImagesPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('images', wagtail.fields.StreamField([('image', wagtail.images.blocks.ImageChooserBlock())], blank=True, use_json_field=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ProductSafetyDataSheet',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('file_upload', wagtail.fields.StreamField([('file', wagtail.documents.blocks.DocumentChooserBlock(help_text='Upload a file', required=False))], blank=True, null=True, use_json_field=True)),
                ('is_file', models.BooleanField(default=False, help_text='Check to enable the feature')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ProductSpecification',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('file_upload', wagtail.fields.StreamField([('file', wagtail.documents.blocks.DocumentChooserBlock(help_text='Upload a file', required=False))], blank=True, null=True, use_json_field=True)),
                ('is_file', models.BooleanField(default=False, help_text='Check to enable the feature')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='SpecificationFirstMenu',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('file_upload', wagtail.fields.StreamField([('file', wagtail.documents.blocks.DocumentChooserBlock(help_text='Upload a file', required=False))], blank=True, null=True, use_json_field=True)),
                ('is_file', models.BooleanField(default=False, help_text='Check to enable the feature')),
                ('category', modelcluster.fields.ParentalManyToManyField(blank=True, to='home.productspecification')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='TeamPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('description', wagtail.fields.RichTextField(blank=True, help_text='A description of the image gallery.', null=True)),
                ('team_members', wagtail.fields.StreamField([('team_member', wagtail.blocks.StructBlock([('name', wagtail.blocks.CharBlock(required=True)), ('designation', wagtail.blocks.CharBlock(required=True)), ('image', wagtail.images.blocks.ImageChooserBlock(required=True))]))], blank=True, null=True, use_json_field=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='VisionMission',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('vision', wagtail.fields.RichTextField()),
                ('mission', wagtail.fields.RichTextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AddField(
            model_name='homepage',
            name='address',
            field=models.CharField(blank=True, max_length=300, null=True),
        ),
        migrations.AddField(
            model_name='homepage',
            name='email',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='homepage',
            name='phone',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.CreateModel(
            name='SpecificationSecondMenu',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('file_upload', wagtail.fields.StreamField([('file', wagtail.documents.blocks.DocumentChooserBlock(help_text='Upload a file', required=False))], blank=True, null=True, use_json_field=True)),
                ('is_file', models.BooleanField(default=False, help_text='Check to enable the feature')),
                ('category', modelcluster.fields.ParentalManyToManyField(blank=True, to='home.specificationfirstmenu')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='DataSheetSecondMenu',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('file_upload', wagtail.fields.StreamField([('file', wagtail.documents.blocks.DocumentChooserBlock(help_text='Upload a file', required=False))], blank=True, null=True, use_json_field=True)),
                ('is_file', models.BooleanField(default=False, help_text='Check to enable the feature')),
                ('category', modelcluster.fields.ParentalManyToManyField(blank=True, to='home.datasheetfirstmenu')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AddField(
            model_name='datasheetfirstmenu',
            name='category',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, to='home.productsafetydatasheet'),
        ),
        migrations.CreateModel(
            name='CarouselImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('caption', models.CharField(blank=True, max_length=250)),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailimages.image')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery_images', to='home.homepage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CarouselContent',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('caption', models.CharField(blank=True, max_length=250)),
                ('image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
